<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-inadarei-api-health-check-00" category="info">

  <front>
    <title>Health Check Response Format for HTTP APIs</title>

    <author initials="I." surname="Nadareishvili" fullname="Irakli Nadareishvili">
      <organization></organization>
      <address>
        <postal>
          <street>114 5th Avenue</street>
          <city>New York</city>
          <country>United States</country>
        </postal>
        <email>irakli@gmail.com</email>
        <uri>http://www.freshblurbs.com</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a service health check response format for HTTP APIs.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="strong">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/inadarei/rfc-healthcheck/issues">https://github.com/inadarei/rfc-healthcheck/issues</eref>.</t>

<t>The most recent draft is at <eref target="https://inadarei.github.io/rfc-healthcheck/">https://inadarei.github.io/rfc-healthcheck/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/inadarei/rfc-healthcheck/commits/master">https://github.com/inadarei/rfc-healthcheck/commits/master</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/">https://datatracker.ietf.org/doc/draft-inadarei-api-health-check/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>The vast majority of modern APIs driving data to web and mobile applications
use HTTP <xref target="RFC7230"/> as their protocol. The health and uptime of these
APIs determine availability of the applications themselves. In distributed
systems built with a number of APIs, understanding the health status of the APIs
and making corresponding decisions, for failover or circuit-breaking, are
essential for providing highly available solutions.</t>

<t>There exists a wide variety of operational software that relies on the ability
to read health check response of APIs. There is currently no standard for the
health check output response, however, so most applications either rely on the
basic level of information included in HTTP status codes <xref target="RFC7231"/> or use
task-specific formats.</t>

<t>Usage of task-specific or application-specific formats creates significant
challenges, disallowing any meaningful interoperability across different
implementations and between different tooling.</t>

<t>Standardizing a format for health checks can provide any of a number of
benefits, including:</t>

<t><list style="symbols">
  <t>Flexible deployment - since operational tooling and API clients can rely on
rich, uniform format, they can be safely combined and substituted as needed.</t>
  <t>Evolvability - new APIs, conforming to the standard, can safely be introduced
in any environment and ecosystem that also conforms to the same standard,
without costly coordination and testing requirements.</t>
</list></t>

<t>This document defines a “health check” format using the JSON format <xref target="RFC8259"/>
for APIs to use as a standard point for the health information they offer.
Having a well-defined format for this purpose promotes good practice and
tooling.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="api-health-response" title="API Health Response">

<t>The API Health Response Format (or, interchangeably, “health check response
format”) uses the JSON format described in <xref target="RFC8259"/> and has the media type
“application/vnd.health+json”.</t>

<t>Its content consists of a single mandatory root field (“status”) and several
optional fields:</t>

<t><list style="symbols">
  <t>status: (required) indicates whether the service status is acceptable or not.
API publishers SHOULD use following values for the field:  <list style="symbols">
      <t>“pass”: healthy,</t>
      <t>“fail”: unhealthy, and</t>
      <t>“warn”: healthy, with some concerns.</t>
    </list>
The health endpoint SHOULD always respond with a success (2xx-3xx, typically:
HTTP 200) response code, for any of the status levels, unless the health
endpoint itself is malfunctioning.</t>
  <t>version: (optional) public version of the service.</t>
  <t>releaseID: (optional) in well-designed APIs, backwards-compatible changes in
the service should not update a version number. APIs usually change their
version number as infrequently as possible, to preserve stable interface.
However implementation of an API may change much more frequently, which leads
to the importance of having separate “release number” or “releaseID” that is
different from the public version of the API.</t>
  <t>notes: (optional) array of notes relevant to current state of health</t>
  <t>output: (optional) raw error output, in case of “fail” or “warn” states. This
field SHOULD be omitted for “pass” state.</t>
  <t>details: (optional) an object representing status of sub-components of the
service in question. Please refer to the “The Details Object” section for more
information.</t>
  <t>links: (optional) an array of objects containing link relations and URIs
<xref target="RFC3986"/> for external links that MAY contain more information about the
health of the endpoint. Per web-linking standards <xref target="RFC5988"/> a link relationship
SHOULD either be a common/registered one or be indicated as a URI, to avoid
name clashes.  If a “self” link is provided, it MAY be used by clients to
check health via HTTP response code, as mentioned above.</t>
  <t>serviceID: (optional) unique identifier of the service, in the application
scope.</t>
  <t>description: (optional) human-friendly description of the service.</t>
</list></t>

</section>
<section anchor="the-details-object" title="The Details Object">

<t>The “details” object MAY have a number of unique keyes, one for each logical
sub-components. Since each sub-component may be backed by several nodes with
varying health statuses, the key points to an array of objects. In case of a
single-node sub-component (or if presence of nodes is not relevant), a
single-element array should be used as the value, for consistency.</t>

<t>The key identifying an element in the object should be a unique string within
the details section. It MAY have two parts: “{componentName}:{metricName}”, in
which case the meaning of the parts SHOULD be as follows:</t>

<t><list style="symbols">
  <t>componentName: (optional) human-readable name for the component. MUST not 
contain a colon, in the name, since colon is used as a separator.</t>
  <t>metricName: (optional) name of the metrics that the status is reported for.
MUST not contain a colon, in the name, since colon is used as a separator and
can be one of:
  <list style="symbols">
      <t>Pre-defined value from this spec. Pre-defined values include:
      <list style="symbols">
          <t>utilization</t>
          <t>responseTime</t>
          <t>connections</t>
          <t>uptime</t>
        </list></t>
      <t>A common and standard term from a well-known source such as schema.org, IANA
or microformats.</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
</list></t>

<t>On the value eside of the equation, each “component details” object in the array
MAY have one of the following object keys:</t>

<t><list style="symbols">
  <t>componentId: (optional) unique identifier of an instance of a specific
sub-component/dependency of a service. Multiple objects with the same
componentID MAY appear in the details, if they are from different nodes.</t>
  <t>componentType: (optional) SHOULD be present if componentName is present. Type
of the component. Could be one of:
  <list style="symbols">
      <t>Pre-defined value from this spec. Pre-defined values include:
      <list style="symbols">
          <t>component</t>
          <t>datastore</t>
          <t>system</t>
        </list></t>
      <t>A common and standard term from a well-known source such as schema.org, IANA
or microformats.</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
  <t>metricValue: (optional) could be any valid JSON value, such as: string, number,
object, array or literal.</t>
  <t>metricUnit: (optional) SHOULD be present if metricValue is present. Could be
one of:
  <list style="symbols">
      <t>A common and standard term from a well-known source such as schema.org, IANA,
microformats, or a standards document such as <xref target="RFC3339"/>.</t>
      <t>A URI that indicates extra semantics and processing rules that MAY be
provided by a resource at the other end of the URI. URIs do not have to be
dereferenceable, however. They are just a namespace, and the meaning of a
namespace CAN be provided by any convenient means (e.g. publishing an RFC,
Swagger document or a nicely printed book).</t>
    </list></t>
  <t>time: the date-time, in ISO8601 format, at which the reading of the
metricValue was recorded. This assumes that the value can be cached and the
reading typically doesn’t happen in real time, for performance and scalability
purposes.</t>
  <t>output: (optional) has the exact same meaning as the top-level “output”
element, but for the sub-component.</t>
  <t>links: (optional) has the exact same meaning as the top-level “output”
element, but for the sub-component.</t>
</list></t>

</section>
<section anchor="example-output" title="Example Output">

<figure><artwork><![CDATA[
  GET /health HTTP/1.1
  Host: example.org
  Accept: application/vnd.health+json

  HTTP/1.1 200 OK
  Content-Type: application/vnd.health+json
  Cache-Control: max-age=3600
  Connection: close

{
  "status": "pass",
  "version": "1",
  "releaseID": "1.2.2",
  "notes": [""],
  "output": "",
  "serviceID": "f03e522f-1f44-4062-9b55-9587f91c9c41",
  "description": "health of authz service",
  "details": {
    "cassandra:responseTime": [
      {
        "componentId": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "componentType": "datastore",
        "metricValue": 250,
        "metricUnit": "ms",
        "status": "pass",
        "time": "2018-01-17T03:36:48Z",
        "output": ""
      }
    ],
    "cassandra:connections": [
      {
        "componentId": "dfd6cf2b-1b6e-4412-a0b8-f6f7797a60d2",
        "type": "datastore",
        "metricValue": 75,
        "status": "warn",
        "time": "2018-01-17T03:36:48Z",
        "output": "",
        "links": {
          "self": "http://api.example.com/dbnode/dfd6cf2b/health"
        }
      }
    ],
    "uptime": [
      {
        "componentType": "system",
        "metricValue": 1209600.245,
        "metricUnit": "s",
        "status": "pass",
        "time": "2018-01-17T03:36:48Z"
      }
    ],
    "cpu:utilization": [
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "node": 1,
        "componentType": "system",
        "metricValue": 85,
        "metricUnit": "percent",
        "status": "warn",
        "time": "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "node": 2,
        "componentType": "system",
        "metricValue": 85,
        "metricUnit": "percent",
        "status": "warn",
        "time": "2018-01-17T03:36:48Z",
        "output": ""
      }
    ],
    "memory:utilization": [
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "node": 1,
        "componentType": "system",
        "metricValue": 8.5,
        "metricUnit": "GiB",
        "status": "warn",
        "time": "2018-01-17T03:36:48Z",
        "output": ""
      },
      {
        "componentId": "6fd416e0-8920-410f-9c7b-c479000f7227",
        "node": 2,
        "componentType": "system",
        "metricValue": 5500,
        "metricUnit": "MiB",
        "status": "pass",
        "time": "2018-01-17T03:36:48Z",
        "output": ""
      }
    ]
  },
  "links": {
    "about": "http://api.example.com/about/authz",
    "http://api.x.io/rel/thresholds":
      "http://api.x.io/about/authz/thresholds"
  }
}
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when reporting health information. Malicious
actors could use this information for orchestrating attacks. In some cases the
health check endpoints may need to be authenticated and institute role-based
access control.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="media-type-registration" title="Media Type Registration">

<t>TODO: application/vnd.health+json is being submitted for registration per
<xref target="RFC6838"/></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5988" target='https://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC3339" target='https://www.rfc-editor.org/info/rfc3339'>
<front>
<title>Date and Time on the Internet: Timestamps</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='C.' surname='Newman' fullname='C. Newman'><organization /></author>
<date year='2002' month='July' />
</front>
<seriesInfo name='RFC' value='3339'/>
<seriesInfo name='DOI' value='10.17487/RFC3339'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to  Mike Amundsen, Erik Wilde, Justin Bachorik and Randall Randall for
their suggestions and feedback. And to Mark Nottingham for blueprint for
authoring RFCs easily.</t>

</section>
<section anchor="creating-and-serving-health-responses" title="Creating and Serving Health Responses">

<t>When making an health check endpoint available, there are a few things to keep
in mind:</t>

<t><list style="symbols">
  <t>A health response endpoint is best located at a memorable and commonly-used
URI, such as “health” because it will help self-discoverability by clients.</t>
  <t>Health check responses can be personalized. For example, you could advertise
different URIs, and/or different kinds of link relations, to afford different
clients access to additional health check information.</t>
  <t>Health check responses must be assigned a freshness lifetime (e.g.,
“Cache-Control: max-age=3600”) so that clients can determine how long they
could cache them, to avoid overly frequent fetching and unintended DDOS-ing of
the service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to
documentation for those constructs.</t>
</list></t>

</section>
<section anchor="consuming-health-check-responses" title="Consuming Health Check Responses">

<t>Clients might use health check responses in a variety of ways.</t>

<t>Note that the health check response is a “living” document; links from the
health check response MUST NOT be assumed to be valid beyond the freshness
lifetime of the health check response, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the health check response (as per
<xref target="RFC7234"/>), to avoid fetching it before every interaction (which would
otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged to obtain
a fresh copy of the health check response, to assure that it is up-to-date.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

